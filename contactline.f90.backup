
subroutine contactline(x_inter,x,x_center,hg,I_fluid_center,corr_Ip,ien,vel_fluid,vol_nn,&
			infdomain_inter,nn_con_ele,con_ele,norm_con_ele,flag_contact)

  use fluid_variables, only:nsd,nn,ne,nen
  use interface_variables
  use allocate_variables
  use mpi_variables

  real(8) x_inter(nsd,maxmatrix),x(nsd,nn)
  real(8) x_center(nsd,ne),hg(ne),I_fluid_center(ne),corr_Ip(maxmatrix)
  integer ien(nen,ne)
  real(8) vel_fluid(nsd,nn),vol_nn(nn)
  integer infdomain_inter(maxmatrix)
  integer nn_con_ele,con_ele(nn_con_ele)
  real(8) norm_con_ele(nsd,nn_con_ele)

  real(8) pi,theta,min_y,max_y,center_y,bot_y
  real(8) gridy
  real(8) x_fix(nsd),norm_fix(nsd),norm_wall(nsd),x_wall(nsd)
  integer nn_con_regen,nn_org_regen ! number of points for contactline/ for original line formed by regeneration
  real(8) x_con_regen(nsd,maxmatrix),x_org_regen(nsd,50)
  integer nn_inter_outer
  real(8) x_inter_outer(nsd,maxmatrix)

  integer i,j,icount,jcount,inl,nit,ie

  real(8) xlocan(nsd),xlocan_temp(nsd),err_p,delta(nsd),xcan(nsd,100)
  real(8) II,dI(nsd),ddI(3*(nsd-1)),norm_p(nsd),curv_p
  real(8) temp,ca !capillary number

  integer loc_can
  real(8) x_loc_can(nsd,50)
  integer flag,index_con_ele(nn_con_ele)
  real(8) tang(nsd) ! tangential direction
  real(8) norm_e(nsd) ! normal direction for element
  integer temp_n
  real(8) rot_x(nsd) !temp x for rotation
  integer flag_contact,flag_ad_re
  pi=3.14159
  theta=static_angle*pi/180.0
!=============================
! assign parameters
if(myid==0)write(*,*)'begin contact line'

  gridy=max_hg
  bot_y=0.0
  min_y=0.5*gridy
  max_y=1.5*gridy
  center_y=0.5*(min_y+max_y)

  nn_inter_outer=0
  x_inter_outer(:,:)=0.0
  nn_con_regen=0
  x_con_regen(:,:)=0.0
  index_con_ele(:)=0
  flag_contact=0
  do i=1,nn_inter
     if(sqrt((x_inter(1,i)+0.5)**2+(x_inter(2,i)-1.0)**2).lt.0.4938+0.2*max_hg) then
	flag_contact=1
     end if
  end do

if (flag_contact==0) goto 999


  do i=1,nn_inter
     flag=0
     do j=1,nn_con_ele
        if(infdomain_inter(i)==con_ele(j)) then
	   index_con_ele(j)=1
	   if(sqrt((x_inter(1,i)+0.5)**2+(x_inter(2,i)-1.0)**2).lt.0.4938+0.3*max_hg) then
!	   flag_contact=1
	   flag=1
!	   index_con_ele(j)=1
	   end if
        end if
     end do

     if(flag==0) then
       nn_inter_outer=nn_inter_outer+1
       x_inter_outer(:,nn_inter_outer)=x_inter(:,i)
     end if
  end do



  loc_can=0
  do ie=1,nn_con_ele
     if(index_con_ele(ie)==0) goto 200 ! only perform within the ele with inter points
     i=con_ele(ie)   !this is the element id
     xlocan(:)=0.0
     do inl=1,nen
        xlocan(:)=xlocan(:)+1.0/real(nen)*x(:,ien(inl,i))
     end do
     gridy=max_hg/2.0!*0.9887
!     if((xlocan(2).gt.min_y-0.5*gridy).and.(xlocan(2).lt.max_y-0.5*gridy)) then
!       if(myid==0) write(*,*)'find the element'
!       xlocan(2)=center_y-gridy/30.0
     norm_e(:)=norm_con_ele(:,ie)
     xlocan(:)=xlocan(:)+0.3*gridy*norm_e(:)!*1.2
     tang(1)=norm_e(2)
     tang(2)=-norm_e(1)       
       nit=1
       err_p=999.0
       delta(:)=0.0
       xlocan_temp(:)=xlocan(:)
       do while((nit.lt.5).and.(err_p.gt.1.0e-8))
          xlocan(:)=xlocan(:)+delta(:)
	  call get_indicator_derivative_2D_1st(xlocan,x_inter,x_center,hg,&
	       I_fluid_center,corr_Ip,II,dI,ddI,norm_p,curv_p)
!	  delta=(0.5-II)/dI(1)
	  delta(1)=(0.5-II)*tang(1)/(tang(1)*dI(1)+tang(2)*dI(2))
	  delta(2)=(0.5-II)*tang(2)/(tang(1)*dI(1)+tang(2)*dI(2))
	  err_p=abs(0.5-II)
	  nit=nit+1
	  if(abs(tang(1)*dI(1)+tang(2)*dI(2)).lt.1.0e-5) then
	    err_p=999.0
	    nit=999
	  end if
       end do
       if(err_p.gt.1.0e-6) goto 200
       temp=(xlocan_temp(1)-xlocan(1))**2+(xlocan_temp(2)-xlocan(2))**2
       temp=sqrt(temp)
       if(temp.gt.max_hg/1.5) goto 200

       
       do j=1,loc_can
          temp=(xlocan(1)-x_loc_can(1,j))**2+(xlocan(2)-x_loc_can(2,j))**2
          temp=sqrt(temp)
          if(temp.lt.max_hg/2.0) goto 200
       end do
       loc_can=loc_can+1
       x_loc_can(:,loc_can)=xlocan(:)
       call regen_contact(xlocan,x_inter,x_center,hg,I_fluid_center,corr_Ip,nn_org_regen,x_org_regen, &
         		  gridy,norm_e,tang,norm_p,flag_ad_re)
!     if(flag_ad_re==1) then
       do j=1,nn_org_regen
          nn_con_regen=nn_con_regen+1
          x_con_regen(:,nn_con_regen)=x_org_regen(:,j)
       end do

!     else
    if(flag_ad_re==1) then
       call find_ca(xlocan,x,vel_fluid,vol_nn,ca,norm_p,theta) 
    
      x_fix(2)=norm_e(1)*xlocan(1)+norm_e(2)*xlocan(2)
      x_fix(1)=tang(1)*xlocan(1)+tang(2)*xlocan(2)
      norm_fix(2)=norm_e(1)*norm_p(1)+norm_e(2)*norm_p(2)
      norm_fix(1)=tang(1)*norm_p(1)+tang(2)*norm_p(2)
      x_wall(2)=x_fix(2)-0.3*max_hg


       if(norm_fix(1).lt.0.0) then
         norm_wall(1)=cos(theta+pi/2.0)
	 norm_wall(2)=sin(theta+pi/2.0)
       else
         norm_wall(1)=cos(pi/2.0-theta)
	 norm_wall(2)=sin(pi/2.0-theta)
       end if
!       x_fix(:)=xlocan(:)
!       norm_fix(:)=norm_p(:)
       temp_n=nn_con_regen
       call solve_contact(x_fix,x_wall,norm_fix,norm_wall,x_con_regen,nn_con_regen)
       do j=temp_n+1,nn_con_regen
!          rot_x(1)=norm_e(1)*x_con_regen(1,j)+tang(1)*x_con_regen(2,j)
!	  rot_x(2)=norm_e(2)*x_con_regen(1,j)+tang(2)*x_con_regen(2,j)
	  rot_x(1)=norm_e(1)*x_con_regen(2,j)+tang(1)*x_con_regen(1,j)
	  rot_x(2)=norm_e(2)*x_con_regen(2,j)+tang(2)*x_con_regen(1,j)
	  x_con_regen(:,j)=rot_x(:)
       end do


     end if  
!      end if !! end of regen
200 continue      

  end do ! end of loop over inter elements

  do i=1,nn_inter_outer
     x_inter(:,i)=x_inter_outer(:,i)
  end do

  nn_inter=nn_inter_outer

  do i=1,nn_con_regen
!     if(x_con_regen(2,i).gt.bot_y) then

       nn_inter=nn_inter+1
       x_inter(:,nn_inter)=x_con_regen(:,i)

!     end if
  end do
999 continue
end subroutine contactline




















ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      subroutine readx(xn)

      include "global.h"
      
      real* 8 xn(nsd,nn)
      
      maxrecl = nsd*maxnn*8

c      call readmxyz(myid*maxrecl,0,xn,nsd*nn*8)
      call readmxyz(0,0,xn,nsd*nn*8)
      return
      end
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      subroutine readien(ien)
      
      include "global.h"
      integer ien(nen,ne)
c      integer lock,ierr,status(MPI_STATUS_SIZE)
      character*4 ifp

      maxrecl = nen * maxnec * 4
      lock = 1

c      call readmien(myid*maxrecl,0,ien,nen*nec*4)
      call readmien(0,0,ien,nen*nec*4)
      
      return
      end
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      subroutine readrng(rngface)

      include "global.h"
      integer rngface(neface,ne), rngfaceieee(neface,nec/2+1)
c      integer lock,ierr,io,status(MPI_STATUS_SIZE)

      maxrecl = neface * maxnec * 4
      lock = 1

c      call readmrng(myid*maxrecl,0,rngface,neface*nec*4)
      call readmrng(0,0,rngface,neface*nec*4)      

      do ieface=1,neface
         do iec=1,ne
            if(rngface(ieface,iec).lt.0) rngface(ieface,iec) = 0
         enddo
      enddo
      
      mynrng = 0
      do ieface=1,neface
         do iec=1,ne
            mynrng = max(mynrng, rngface(ieface,iec))
         end do
      end do
      nrng=mynrng
      write(6,1000) nrng
 1000    format("mrng: ",i2," boundaries")
      
      return
      end
